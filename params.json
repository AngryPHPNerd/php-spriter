{"name":"Php-spriter","tagline":"Easy to use and flexible icon sprite generator. It can be included in any PHP project and works on the fly.","body":"# PHP Spriter - The icon sprite generator\r\n\r\nPHP Spriter is an easy to use and flexible icon sprite generator. \r\nIt can be included in any PHP project and works on the fly.\r\n\r\n## Table of contents\r\n\r\n* [Installation](#installation)\r\n* [Configuration](#configuration)\r\n* [Generation state](#generation-state)\r\n* [Templates](#templates)\r\n* [Contributing](#contributing)\r\n* [Credits & License](#credits)\r\n\r\n## Installation\r\n\r\nPut these files in a directory inside your project. \r\nAdd...\r\n\r\n    require_once 'path/to/spriter/spriter.inc.php';\r\n    new Spriter($your_spriter_configuration);\r\n\r\n...to the desired place inside your project where you want Spriter to get in action.\r\n\r\n## Configuration\r\n\r\n    $your_spriter_configuration = array(\r\n        \"forceGenerate\" => false,                 // Set to true if you want to force the CSS and sprite generation\r\n        \"cssDirectory\" => \"/path/to/css\",         // where you want the sprite CSS to be saved. This folder has to be writable by your webserver\r\n        \"iconDirectory\" => \"/path/to/your/icons\", // directory, which contains your single icon files\r\n        \"spriteDirectory\" => \"/path/to/img\",      // where you want the sprite image file to be saved. Folder has to be writable, too.\r\n        \"spriteFilename\" => \"icon-sprite\",        // the name of the generated CSS and PNG file\r\n        \"retina\" => array(2, 1),                  // defines the desired retina dimensions, you want\r\n        \"retinaDelimiter\" => \"@\",                 // the delimiter inside the sprite image filename\r\n        \"cssFileExtension\" => \"css\",              // the CSS file extension\r\n        \"namespace\" => \"icon-\",                   // the namespace for your icon CSS classes\r\n        \"ignoreHover\" => false,                   // Set to true if you don't need hover icons\r\n        \"hoverSuffix\" => \"-hover\",                // Set to any suffix you want.\r\n        \"globalTemplate\" => \"...\",                // the global template, which contains general CSS styles for all icons (remove line for default)\r\n        \"eachTemplate\" => \"...\",                  // the template for each CSS icon class (remove line for default)\r\n        \"eachHoverTemplate\" => \"...\",             // the template for each CSS icon hover class (remove line for default)\r\n        \"ratioTemplate\" => \"...\"                  // the template for each retina media query (remove line for default)\r\n    );\r\n\r\n## Generation state\r\n\r\nIf you want to check, if Spriter has made a new generation you can do the following\r\n\r\n    $spriter = new Spriter($your_spriter_configuration);\r\n\r\n    if($spriter->hasGenerated) {\r\n        // do the stuff, you need, when files have been generated\r\n    }\r\n\r\n## Templates\r\n\r\nYou can simply edit the existing template files (placed at spriter/templates) to your needs. You can also add your own template files (if you want to).\r\n\r\n### Global template\r\n\r\nThe global template represents the general CSS declarations for each icon. \r\nSpriter comes with the following default template:\r\n\r\n    .icon, .icon-after:after, .icon-before:before {\r\n        background-image: url({{spriteDirectory}}/{{spriteFilename}}.png);\r\n        background-repeat: no-repeat;\r\n        background-size: {{width}} {{height}};\r\n        display: inline-block;\r\n    }\r\n\r\n    .icon-after:after, .icon-before:before {\r\n        top: 0;\r\n        margin: 0;\r\n        padding: 0;\r\n        content: \"\";\r\n        display: inline-block;\r\n        position: relative;\r\n    }\r\n\r\n    .icon-after:after {\r\n        right: 0;\r\n    }\r\n\r\n    .icon-before:before {\r\n        left: 0;\r\n    }\r\n\r\nThe following placeholders can be used inside the global template:\r\n\r\n* {{namespace}} = configured namespace\r\n* {{width}} = generated sprite width\r\n* {{height}} = generated sprite height\r\n* {{spriteDirectory}} = configured sprite directory\r\n* {{spriteFilename}} = configured sprite filename\r\n* {{sprite}} = {{spriteDirectory}}/{{spriteFilename}}.png\r\n\r\n### Each Template\r\n\r\nThe each template represents the CSS declarations for a single named icon. \r\nThe following default template comes with Spriter:\r\n\r\n    {{name}}, {{name}}-after:after, {{name}}-before:before { background-position: {{x}} {{y}}; width: {{width}}; height: {{height}}; }\r\n\r\nYou can use the following placeholders:\r\n\r\n* {{name}} = name of the icon (this is the icons filename without file extension)\r\n* {{x}} = the top position on the background sprite\r\n* {{y}} = the left position on the background sprite\r\n* {{width}} = the width of the icon\r\n* {{height}} = the height of the icon\r\n\r\n### Each Hover Template\r\n\r\nThe each template represents the CSS declarations for a single named icons hover state. \r\nThe following default template comes with Spriter:\r\n\r\n    {{name}}:hover, {{name}}-after:hover:after, {{name}}-before:hover:before { background-position: {{x}} {{y}}; width: {{width}}; height: {{height}}; }\r\n\r\nYou can use the following placeholders:\r\n\r\n* {{name}} = name of the icon (this is the icons filename without file extension and without hoverSuffix)\r\n* {{x}} = the top position on the background sprite\r\n* {{y}} = the left position on the background sprite\r\n* {{width}} = the width of the icon\r\n* {{height}} = the height of the icon\r\n\r\n### Ratio Template\r\n\r\nWith the ratio template you can configure the CSS definitions for the retina media queries. \r\nThis is the default template:\r\n\r\n    @media only screen and (-webkit-min-device-pixel-ratio: {{ratio}}),\r\n    only screen and (-o-min-device-pixel-ratio: {{ratioFrag}}),\r\n    only screen and (min-device-pixel-ratio: {{ratio}}) {\r\n        .icon, .icon-after:after, .icon-before:before {\r\n            background-image: url({{spriteDirectory}}/{{spriteFilename}}{{delimiter}}{{ratio}}x.png);\r\n            -webkit-background-size: {{width}} {{height}};\r\n            -moz-background-size: {{width}} {{height}};\r\n            background-size: {{width}} {{height}};\r\n        }\r\n    }\r\n\r\nYou can use the following placeholders:\r\n\r\n* {{ratio}} = the retina ratio value\r\n* {{ratioFrag}} = the retina ratio value as a fragment (for opera)\r\n* {{delimiter}} = the configured delimiter\r\n* {{namespace}} = configured namespace\r\n* {{width}} = generated sprite width\r\n* {{height}} = generated sprite height\r\n* {{spriteDirectory}} = configured sprite directory\r\n* {{spriteFilename}} = configured sprite filename\r\n\r\n## Contributing\r\n\r\n* For Bugs & Features please use [github](https://github.com/namics/php-spriter/issues)\r\n* Feel free to fork and send PRs. That's the best way to discuss your ideas.\r\n\r\n## Credits\r\n\r\nPHP Spriter was created by [Christian Stuff](https://github.com/Regaddi)\r\n\r\n## License\r\n\r\nReleased under the [MIT license](LICENSE)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}